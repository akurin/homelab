---
- name: Fail if required variables are not defined
  ansible.builtin.fail:
    msg: "The required variable {{ item }} is not defined."
  loop:
    - { name: 'uuid', value: '{{ uuid }}' }
    - { name: 'private_key', value: '{{ private_key }}' }
    - { name: 'public_key', value: '{{ public_key }}' }
    - { name: 'short_id', value: '{{ short_id }}' }
  when: item.value is not defined or item.value == ""

- name: Install Xray
  ansible.builtin.shell: bash -c "$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" @ install
  args:
    executable: /bin/bash
  changed_when: true

- name: Save Xray config
  ansible.builtin.template:
    src: server_config.json.j2
    dest: /usr/local/etc/xray/config.json
    mode: '0644'

- name: Restart Xray service asynchronously
  ansible.builtin.systemd:
    name: xray
    state: restarted
  async: 30
  poll: 0

- name: Wait for SSH to become available again
  ansible.builtin.wait_for_connection:
    timeout: 60
    delay: 10

- name: Allow ports 22, 23, 443 UFW
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  loop:
    - '22'
    - '23'
    - '443'

- name: Ensure UFW is enabled
  community.general.ufw:
    state: enabled

- name: Create NekoRay profile
  ansible.builtin.template:
    src: nekoray_profile.json.j2
    dest: "~/vpn/{{ inventory_hostname }}_nekoray_profile.json"
    mode: '0600'
  delegate_to: localhost
  vars:
    server_public_ip: "{{ ansible_host }}"

- name: Create sing-box config
  ansible.builtin.template:
    src: sing_box_client.conf.j2
    dest: "~/vpn/{{ inventory_hostname }}_sing_box_client.json"
    mode: '0600'
  delegate_to: localhost
  vars:
    server_public_ip: "{{ ansible_host }}"

- name: Create vless URI
  ansible.builtin.template:
    src: vless_uri.j2
    dest: "~/vpn/{{ inventory_hostname }}_vless_uri.txt"
    mode: '0600'
  delegate_to: localhost
  vars:
    server_public_ip: "{{ ansible_host }}"
